{
	"info": {
		"_postman_id": "b2984310-8290-4652-8aac-4be4f57f98de",
		"name": "Members",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Crear un socio válido.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"memberId\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pedro Perez\",\n    \"email\": \"pedroperez@correo.com\",\n    \"birthDate\": \"24 de enero 1997\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/members",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members"
					]
				}
			},
			"response": [
				{
					"name": "Crear un socio válido.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Pedro Perez\",\n    \"email\": \"pedroperez@correo.com\",\n    \"birthDate\": \"24 de enero 1997\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"name\": \"Pedro Perez\",\n    \"email\": \"pedroperez@correo.com\",\n    \"birthDate\": \"24 de enero 1997\",\n    \"id\": 1\n}"
				}
			]
		},
		{
			"name": "Crear un socio no válido.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {",
							"   pm.response.to.have.status(412);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pedro Perez\",\n    \"email\": \"correo invalido\",\n    \"birthDate\": \"24 de enero 1997\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/members",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members"
					]
				}
			},
			"response": [
				{
					"name": "Crear un socio no válido.",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Pedro Perez\",\n    \"email\": \"correo invalido\",\n    \"birthDate\": \"24 de enero 1997\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"statusCode\": 412,\n    \"timestamp\": \"2023-11-20T00:39:09.723Z\",\n    \"path\": \"/api/v1/members\",\n    \"message\": \"El correo electronico proporcionado no es valido\"\n}"
				}
			]
		},
		{
			"name": "Obtener todos los socios.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Número de socios > ' + 0, function () {",
							"   var data = pm.response.json()",
							"   pm.expect(data.length).to.greaterThan(0)",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/members",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members"
					]
				}
			},
			"response": [
				{
					"name": "Obtener todos los socios.",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"Pedro Perez\",\n        \"email\": \"pedroperez@correo.com\",\n        \"birthDate\": \"24 de enero 1997\",\n        \"clubs\": []\n    }\n]"
				}
			]
		},
		{
			"name": "Obtener un socio por ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/members/{{memberId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"{{memberId}}"
					]
				}
			},
			"response": [
				{
					"name": "Obtener un socio por ID",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/members/{{memberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"{{memberId}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"name\": \"Pedro Perez\",\n    \"email\": \"pedroperez@correo.com\",\n    \"birthDate\": \"24 de enero 1997\",\n    \"clubs\": []\n}"
				}
			]
		},
		{
			"name": "Obtener un socio por un ID que no existe.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/members/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"0"
					]
				}
			},
			"response": [
				{
					"name": "Obtener un socio por un ID que no existe.",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/members/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"timestamp\": \"2023-11-20T00:42:28.690Z\",\n    \"path\": \"/api/v1/members/0\",\n    \"message\": \"El Socio con id 0 no existe\"\n}"
				}
			]
		},
		{
			"name": "Actualizar un socio.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pedro Perez actualizado\",\n    \"email\": \"pedroperez@correo.com\",\n    \"birthDate\": \"24 de enero 1997\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/members/{{memberId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"{{memberId}}"
					]
				}
			},
			"response": [
				{
					"name": "Actualizar un socio",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Pedro Perez actualizado\",\n    \"email\": \"pedroperez@correo.com\",\n    \"birthDate\": \"24 de enero 1997\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/members/{{memberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"{{memberId}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"name\": \"Pedro Perez actualizado\",\n    \"email\": \"pedroperez@correo.com\",\n    \"birthDate\": \"24 de enero 1997\",\n    \"clubs\": []\n}"
				}
			]
		},
		{
			"name": "Actualizar un socio con un ID que no existe.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Pedro Perez actualizado\",\n    \"email\": \"pedroperez@correo.com\",\n    \"birthDate\": \"24 de enero 1997\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/members/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"0"
					]
				}
			},
			"response": [
				{
					"name": "Actualizar un socio con un ID que no existe.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Pedro Perez actualizado\",\n    \"email\": \"pedroperez@correo.com\",\n    \"birthDate\": \"24 de enero 1997\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/members/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"timestamp\": \"2023-11-20T00:45:27.182Z\",\n    \"path\": \"/api/v1/members/0\",\n    \"message\": \"El Socio con id 0 no existe\"\n}"
				}
			]
		},
		{
			"name": "Eliminar un socio por su ID.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/members/{{memberId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"{{memberId}}"
					]
				}
			},
			"response": [
				{
					"name": "Eliminar un socio con un ID que no existe.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/members/{{memberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"{{memberId}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Eliminar un socio con un ID que no existe.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/members/0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"0"
					]
				}
			},
			"response": [
				{
					"name": "Eliminar un socio con un ID que no existe.",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/members/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"0"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"timestamp\": \"2023-11-20T00:46:21.772Z\",\n    \"path\": \"/api/v1/members/0\",\n    \"message\": \"El Socio con id 0 no existe\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		}
	]
}